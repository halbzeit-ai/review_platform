# Generated SQLAlchemy models for missing tables\n# Add these to app/db/models.py\n\nclass AnalysisTemplates(Base):\n    __tablename__ = "analysis_templates"\n\n    id = Column(Integer, primary_key=True, index=True)\n    healthcare_sector_id = Column(Integer, nullable=False, index=True)\n    name = Column(String(255), nullable=False, index=True)\n    description = Column(Text)\n    template_version = Column(String(50))\n    specialized_analysis = Column(Text)\n    is_active = Column(Boolean, default=True)\n    is_default = Column(Boolean, default=False)\n    usage_count = Column(Integer)\n    created_by = Column(String(255))\n    created_at = Column(DateTime, default=datetime.utcnow)\n    modified_at = Column(DateTime, default=datetime.utcnow)\n    analysis_prompt = Column(Text)\n\nclass ChapterAnalysisResults(Base):\n    __tablename__ = "chapter_analysis_results"\n\n    id = Column(Integer, primary_key=True, index=True)\n    pitch_deck_id = Column(Integer, nullable=False, index=True)\n    chapter_id = Column(Integer, nullable=False, index=True)\n    chapter_response = Column(Text)\n    average_score = Column(String  # real)\n    weighted_score = Column(String  # real)\n    total_questions = Column(Integer)\n    answered_questions = Column(Integer)\n    processing_time = Column(String  # real)\n    created_at = Column(DateTime, default=datetime.utcnow)\n\nclass ChapterQuestions(Base):\n    __tablename__ = "chapter_questions"\n\n    id = Column(Integer, primary_key=True, index=True)\n    chapter_id = Column(Integer, nullable=False, index=True)\n    question_id = Column(String(100), nullable=False, index=True)\n    question_text = Column(Text, nullable=False)\n    weight = Column(String  # real)\n    order_index = Column(Integer)\n    enabled = Column(Boolean, default=True)\n    scoring_criteria = Column(Text)\n    healthcare_focus = Column(Text)\n    question_prompt_template = Column(Text)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    modified_at = Column(DateTime, default=datetime.utcnow)\n\nclass ClassificationPerformance(Base):\n    __tablename__ = "classification_performance"\n\n    id = Column(Integer, primary_key=True, index=True)\n    classification_id = Column(Integer, nullable=False, index=True)\n    was_accurate = Column(Boolean)\n    manual_correction_from = Column(String(255))\n    manual_correction_to = Column(String(255))\n    correction_reason = Column(Text)\n    corrected_by = Column(String(255))\n    created_at = Column(DateTime, default=datetime.utcnow)\n\nclass GpTemplateCustomizations(Base):\n    __tablename__ = "gp_template_customizations"\n\n    id = Column(Integer, primary_key=True, index=True)\n    gp_email = Column(String(255), nullable=False)\n    base_template_id = Column(Integer, nullable=False, index=True)\n    customization_name = Column(String(255))\n    customized_chapters = Column(Text)\n    customized_questions = Column(Text)\n    customized_weights = Column(Text)\n    is_active = Column(Boolean, default=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    modified_at = Column(DateTime, default=datetime.utcnow)\n\nclass HealthcareSectors(Base):\n    __tablename__ = "healthcare_sectors"\n\n    id = Column(Integer, primary_key=True, index=True)\n    name = Column(String(255), nullable=False, index=True)\n    display_name = Column(String(255), nullable=False)\n    description = Column(Text)\n    keywords = Column(Text, nullable=False)\n    subcategories = Column(Text, nullable=False)\n    confidence_threshold = Column(String  # real)\n    regulatory_requirements = Column(Text)\n    is_active = Column(Boolean, default=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    modified_at = Column(DateTime, default=datetime.utcnow)\n\nclass HealthcareTemplatesDeprecated(Base):\n    __tablename__ = "healthcare_templates_deprecated"\n\n    id = Column(Integer, primary_key=True, index=True)\n    template_name = Column(String(255), nullable=False)\n    analysis_prompt = Column(Text, nullable=False)\n    description = Column(Text)\n    healthcare_sector_id = Column(Integer, index=True)\n    is_active = Column(Boolean, default=True)\n    is_default = Column(Boolean, default=False)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    updated_at = Column(DateTime, default=datetime.utcnow)\n\nclass ProductionProjects(Base):\n    __tablename__ = "production_projects"\n\n    id = Column(Integer, primary_key=True, index=True)\n    company_id = Column(String(255), index=True)\n    project_name = Column(String(255))\n    funding_round = Column(String(100))\n    current_stage_id = Column(Integer, index=True)\n    funding_sought = Column(Text)\n    healthcare_sector_id = Column(Integer, index=True)\n    company_offering = Column(Text)\n    project_metadata = Column(String  # jsonb)\n    is_active = Column(Boolean)\n    created_at = Column(DateTime)\n    updated_at = Column(DateTime)\n    tags = Column(String  # jsonb)\n    is_test = Column(Boolean)\n\nclass ProjectProgress(Base):\n    __tablename__ = "project_progress"\n\n    project_id = Column(Integer, index=True)\n    company_id = Column(String(255), index=True)\n    project_name = Column(String(255))\n    funding_round = Column(String(100))\n    total_stages = Column(String  # bigint)\n    completed_stages = Column(String  # bigint)\n    active_stages = Column(String  # bigint)\n    pending_stages = Column(String  # bigint)\n    completion_percentage = Column(Numeric)\n    current_stage_name = Column(String(255))\n    current_stage_order = Column(Integer)\n\nclass QuestionAnalysisResults(Base):\n    __tablename__ = "question_analysis_results"\n\n    id = Column(Integer, primary_key=True, index=True)\n    pitch_deck_id = Column(Integer, nullable=False, index=True)\n    question_id = Column(Integer, nullable=False, index=True)\n    raw_response = Column(Text)\n    structured_response = Column(Text)\n    score = Column(Integer)\n    confidence_score = Column(String  # real)\n    processing_time = Column(String  # real)\n    model_used = Column(String(100))\n    prompt_used = Column(Text)\n    created_at = Column(DateTime, default=datetime.utcnow)\n\nclass SpecializedAnalysisResults(Base):\n    __tablename__ = "specialized_analysis_results"\n\n    id = Column(Integer, primary_key=True, index=True)\n    pitch_deck_id = Column(Integer, nullable=False, index=True)\n    analysis_type = Column(String(100), nullable=False)\n    analysis_result = Column(Text)\n    structured_result = Column(Text)\n    confidence_score = Column(String  # real)\n    model_used = Column(String(100))\n    processing_time = Column(String  # real)\n    created_at = Column(DateTime, default=datetime.utcnow)\n\nclass StageTemplates(Base):\n    __tablename__ = "stage_templates"\n\n    id = Column(Integer, primary_key=True, index=True)\n    stage_name = Column(String(255), nullable=False, index=True)\n    stage_code = Column(String(100), nullable=False)\n    description = Column(Text)\n    stage_order = Column(Integer, nullable=False)\n    is_required = Column(Boolean, default=True)\n    estimated_duration_days = Column(Integer)\n    stage_metadata = Column(String  # jsonb)\n    is_active = Column(Boolean, default=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    updated_at = Column(DateTime, default=datetime.utcnow)\n\nclass StartupClassifications(Base):\n    __tablename__ = "startup_classifications"\n\n    id = Column(Integer, primary_key=True, index=True)\n    pitch_deck_id = Column(Integer, nullable=False, index=True)\n    company_offering = Column(Text, nullable=False)\n    primary_sector_id = Column(Integer, index=True)\n    subcategory = Column(String(255))\n    confidence_score = Column(String  # real)\n    classification_reasoning = Column(Text)\n    secondary_sector_id = Column(Integer, index=True)\n    keywords_matched = Column(Text)\n    template_used = Column(Integer)\n    manual_override = Column(Boolean, default=False)\n    manual_override_reason = Column(Text)\n    classified_by = Column(String(255))\n    created_at = Column(DateTime, default=datetime.utcnow)\n\nclass TemplateChapters(Base):\n    __tablename__ = "template_chapters"\n\n    id = Column(Integer, primary_key=True, index=True)\n    template_id = Column(Integer, nullable=False, index=True)\n    chapter_id = Column(String(100), nullable=False, index=True)\n    name = Column(String(255), nullable=False, index=True)\n    description = Column(Text)\n    weight = Column(String  # real)\n    order_index = Column(Integer)\n    is_required = Column(Boolean, default=True)\n    enabled = Column(Boolean, default=True)\n    chapter_prompt_template = Column(Text)\n    scoring_prompt_template = Column(Text)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    modified_at = Column(DateTime, default=datetime.utcnow)\n    analysis_template_id = Column(Integer, index=True)\n\nclass TemplatePerformance(Base):\n    __tablename__ = "template_performance"\n\n    id = Column(Integer, primary_key=True, index=True)\n    template_id = Column(Integer, nullable=False, index=True)\n    pitch_deck_id = Column(Integer, nullable=False, index=True)\n    total_processing_time = Column(String  # real)\n    successful_questions = Column(Integer)\n    failed_questions = Column(Integer)\n    average_confidence = Column(String  # real)\n    gp_rating = Column(Integer)\n    gp_feedback = Column(Text)\n    created_at = Column(DateTime, default=datetime.utcnow)\n\nclass TestProjects(Base):\n    __tablename__ = "test_projects"\n\n    id = Column(Integer, primary_key=True, index=True)\n    company_id = Column(String(255), index=True)\n    project_name = Column(String(255))\n    funding_round = Column(String(100))\n    current_stage_id = Column(Integer, index=True)\n    funding_sought = Column(Text)\n    healthcare_sector_id = Column(Integer, index=True)\n    company_offering = Column(Text)\n    project_metadata = Column(String  # jsonb)\n    is_active = Column(Boolean)\n    created_at = Column(DateTime)\n    updated_at = Column(DateTime)\n    tags = Column(String  # jsonb)\n    is_test = Column(Boolean)\n